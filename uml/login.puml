@startuml
actor User
participant Client
participant Server

== Login ==
User -> Client: Fournir nom d'utilisateur et mot de passe

Client -> Server: client_login_start_result = OPAQUE_ClientLogin(password)
Server -> Server: Cherche password_file lié au username
Server -> Client: server_login_start_result = OPAQUE_ServerLogin(username, client_login_start_result, password_file)

Client -> Client: client_login_finish_result = OPAQUE_ClientLoginFinish(password, server_Login_start_result)
Client -> Client: key = client_login_finish_result.export_key
Client -> Client: key_communication = client_login_finish_result.session_key

Client -> Server: client_login_finish_result
Server -> Server: OPAQUE_ServerLoginFinish(username, client_login_finish_result)
Server -> Server: key_communication = server_login_finish_result.session_key

alt Connexion réussie
    Server -> Client: (cpriv1, pub1, cpriv2, pub2)
    Client -> Client: Déchiffrement des clés privées
    Client -> Client: Possède key, key_communication, priv1, pub1, priv2, pub2
else Connexion échouée
    Server -> Client: Échec de l'authentification
end
@enduml
